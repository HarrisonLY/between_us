- content_for :title do
  = "#{@search.location} | Between Us"

.search
  = form_for [@user, Search.new] do |f|
    = f.hidden_field :user_id, :value => @user.id
    = f.text_field :location, :placeholder => "Type in another friend's location", :required => true
    = f.submit 'See Between Us'

.gmap_container
  h1 = "There are #{@miles_between.round} miles of uncharted territory between you guys"
  #gmap_underbar
    a href="/users/#{@user.id}/searches/#{@search.id}/yelp"
      = image_tag("/assets/icon_coffee.png", :mouseover => "/assets/icon_coffee_over.png")
    a href="/users/#{@user.id}/searches/#{@search.id}/user_directions_driving"
      = image_tag("/assets/icon_car.png", :mouseover => "/assets/icon_car_over.png")
    a href="/users/#{@user.id}/searches/#{@search.id}/user_directions_bicycling"
      = image_tag("/assets/icon_bike.png", :mouseover => "/assets/icon_bike_over.png")
    a href="/users/#{@user.id}/searches/#{@search.id}/user_directions_walking"
      = image_tag("/assets/icon_walking.png", :mouseover => "/assets/icon_walking_over.png")
    a href="/users/#{@user.id}/searches/#{@search.id}/user_directions_transit"
      = image_tag("/assets/icon_subway.png", :mouseover => "/assets/icon_subway_over.png")
    a href="/users/#{@user.id}/searches/#{@search.id}"
      = image_tag("/assets/icon_go_back.png", :mouseover => "/assets/icon_go_back_over.png")
  #gmap
    = gmaps(@gmaps_json)
/ #TODO SET CONDITIONAL FOR GMAP INSTRUCTIONS
- if @gmap_sidebar
  #gmap_instructions
    - if @yelp_response
      - @yelp_response["businesses"].each do |business|
        a href="#{business['url']}"
          = business["name"]
        = "  -  "
        = business["snippet_text"]
        br/
        br/

- content_for :scripts
  - if @no_info_window
    javascript:
      Gmaps.map.callback = function() {
        function initializeAutoComplete() {

          var input = /** @type {HTMLInputElement} */(document.getElementById('search_location'));
          var autocomplete = new google.maps.places.Autocomplete(input);

          google.maps.event.addListener(autocomplete, 'place_changed', function() {

            var place = autocomplete.getPlace();
            console.log(place);
            console.log(place.formatted_address);
            if (!place.geometry) {
              // Inform the user that the place was not found and return.
              input.className = 'notfound';
              return;
            }
          });
        }

        initializeAutoComplete();

      }
  - else
    javascript:
      Gmaps.map.callback = function() {

        function openInfoWindow(){
          var m, marker;
          marker = Gmaps.map.markers[2];
          m = marker.serviceObject;
          marker.infowindow.open(Gmaps.map.map, m);
        }

        function initializeAutoComplete() {

          var input = /** @type {HTMLInputElement} */(document.getElementById('search_location'));
          var autocomplete = new google.maps.places.Autocomplete(input);

          google.maps.event.addListener(autocomplete, 'place_changed', function() {

            var place = autocomplete.getPlace();
            if (!place.geometry) {
              // Inform the user that the place was not found and return.
              input.className = 'notfound';
              return;
            }
          });
        }
        openInfoWindow();
        initializeAutoComplete();
      }
